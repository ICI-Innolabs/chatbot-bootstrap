// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model User {
  id            String          @id @default(cuid())
  name          String?
  email         String?          @unique
  emailVerified DateTime?
  password     String?
  image         String?
  accounts      Account[]
  sessions      Session[]
  threads  Thread[]
  
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}
 
model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@id([identifier, token])
}



model Thread {
  id        String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  statusGenTitle   Boolean    @default(false)
  user    User     @relation(fields: [userId], references: [id])
  userId  String
  messages  Message[]
  @@index([createdAt])
  @@index([updatedAt])
}

model Message {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  thread    Thread   @relation(fields: [threadId], references: [id], onDelete: Cascade)
  threadId  String
  content     String
  role        String
  promptTokens Int?
  completionTokens Int?
  totalTokens Int?

  @@index([createdAt])
  @@index([updatedAt])
}
